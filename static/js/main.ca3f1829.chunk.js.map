{"version":3,"sources":["components/Battle/styles.module.css","components/PlayerSummary/styles.module.css","components/Bar/styles.module.css","components/StartMenu/styles.module.css","components/BattleMenu/styles.module.css","components/EndMenu/styles.module.css","components/BattleAnnouncer/styles.module.css","components/App/styles.module.css","shared/helpers.js","shared/characters.js","components/App/App.js","components/Bar/Bar.js","hooks/useAIOpponent.js","components/Battle/Battle.js","hooks/useBattleSequence.js","components/EndMenu/EndMenu.js","components/StartMenu/StartMenu.js","components/BattleMenu/BattleMenu.js","components/PlayerSummary/PlayerSummary.js","components/BattleAnnouncer/BattleAnnouncer.js","hooks/useTypedMessage.js","index.js"],"names":["module","exports","wait","ms","Promise","resolve","setTimeout","playerStats","level","maxHealth","name","img","magic","attack","defense","magicDefense","opponentStats","App","winner","setWinner","useState","mode","setMode","useEffect","undefined","_jsxs","className","styles","main","children","_jsx","StartMenu","onStartClick","file","console","log","window","URL","createObjectURL","Battle","onGameEnd","EndMenu","Bar","_ref","value","maxValue","label","max","style","width","concat","sequence","setSequence","turn","inSequence","playerHealth","opponentHealth","playerAnimation","opponentAnimation","announcerMessage","setTurn","setInSequence","setPlayerHealth","setOpponentHealth","setAnnouncerMessage","setPlayerAnimation","setOpponentAnimation","attacker","receiver","damage","h","_ref2","recovered","_ref3","heal","useBattleSequence","aiChoice","setAIChoice","options","Math","floor","random","length","useAIOpponent","_Fragment","opponent","summary","PlayerSummary","health","characters","gameHeader","gameImages","playerSprite","alt","src","opponentSprite","user","hud","hudChild","BattleAnnouncer","message","BattleMenu","onHeal","onMagic","onAttack","startButton","onClick","selectedFile","setSelectedFile","type","id","hidden","onChange","event","target","files","htmlFor","disabled","option","backgroundColor","info","typedMessage","setTypedMessage","visibleMessage","i","useTypedMessage","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca3f1829.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"styles_user__2KSwn\",\"opponent\":\"styles_opponent__dull4\",\"hud\":\"styles_hud__tNbde\",\"hudChild\":\"styles_hudChild__NzEVA\",\"gameHeader\":\"styles_gameHeader__1ujCt\",\"summary\":\"styles_summary__3X_vY\",\"characters\":\"styles_characters__31XjR\",\"gameImages\":\"styles_gameImages__3XW2U\",\"static\":\"styles_static__36JKT\",\"playerSprite\":\"styles_playerSprite__2oElY\",\"attack\":\"styles_attack__LNDOy\",\"opponentSprite\":\"styles_opponentSprite__J_xLc\",\"magic\":\"styles_magic__1rb3j\",\"shake\":\"styles_shake__q_4Wr\",\"damage\":\"styles_damage__2APU5\",\"flash\":\"styles_flash__2jfkq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__2l0HZ\",\"info\":\"styles_info__2MyK8\",\"name\":\"styles_name__1EX6M\",\"level\":\"styles_level__1OdYc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__8Ms8V\",\"label\":\"styles_label__1Yhre\",\"max\":\"styles_max__Xeu5g\",\"value\":\"styles_value__2ztsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__2Nvos\",\"startButton\":\"styles_startButton__1Ga2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__31vVM\",\"option\":\"styles_option__39N1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__rWBi9\",\"startButton\":\"styles_startButton__3bKxZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__3wQVJ\",\"message\":\"styles_message__2EyYT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__T04P_\"};","export const wait = ms =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n\nexport const attack = ({ attacker, receiver }) => {\n  const receivedDamage =\n    attacker.attack - (attacker.level - receiver.level) * 1.25;\n\n  const finalDamage = receivedDamage - receiver.defense / 2;\n\n  return finalDamage;\n};\nexport const magic = ({ attacker, receiver }) => {\n  const receivedDamage =\n    attacker.magic - (attacker.level - receiver.level) * 1.25;\n\n  const finalDamage = receivedDamage - receiver.magicDefense / 2;\n\n  return finalDamage;\n};\nexport const heal = ({ receiver }) => {\n  return receiver.magic + receiver.level * 0.25;\n};\n","export var playerStats = {\n  level: 1,\n  maxHealth: 177,\n  name: 'Player',\n  img: '/assets/bouboule.gif',\n\n  magic: 32,\n  attack: 50,\n  defense: 30,\n  magicDefense: 30,\n};\nexport const opponentStats = {\n  level: 3,\n  name: 'Bouboule de feu',\n  maxHealth: 150,\n  img: 'https://raw.githubusercontent.com/victorlohezic/flippanim-battle-pages/main/public/assets/bouboule_de_feu.gif',\n\n  magic: 50,\n  attack: 32,\n  defense: 20,\n  magicDefense: 30,\n};\n","import styles from './styles.module.css';\nimport { useEffect, useState } from 'react';\nimport { Battle, EndMenu, StartMenu } from 'components';\nimport { playerStats} from 'shared';\nexport const App = () => {\n  const [winner, setWinner] = useState();\n  const [mode, setMode] = useState('start');\n\n  useEffect(() => {\n    if (mode === 'battle') {\n      setWinner(undefined);\n    }\n  }, [mode]);\n\n  return (\n    <div className={styles.main}>\n      {mode === 'start' && (\n        <StartMenu onStartClick={(file) => {\n          setMode('battle');\n          if (file) {\n            console.log('Chemin du fichier:', file);\n            playerStats.img =  window.URL.createObjectURL(file);\n            setMode('battle');\n          }\n        }} />\n      )}\n\n      {mode === 'battle' && (\n        <Battle\n          onGameEnd={winner => {\n            setWinner(winner);\n            setMode('gameOver');\n          }}\n        />\n      )}\n\n      {mode === 'gameOver' && !!winner && (\n        <EndMenu winner={winner} onStartClick={() => setMode('battle')} />\n      )}\n    </div>\n  );\n};\n","import styles from './styles.module.css';\n\nexport const Bar = ({ value, maxValue, label }) => (\n  <div className={styles.main}>\n    <div className={styles.label}>{label}</div>\n    <div className={styles.max}>\n      <div\n        className={styles.value}\n        style={{ width: `${(value / maxValue) * 100}%` }}\n      ></div>\n    </div>\n  </div>\n);\n","import { useEffect, useState } from 'react';\n\nexport const useAIOpponent = turn => {\n  const [aiChoice, setAIChoice] = useState('');\n\n  useEffect(() => {\n    if (turn === 1) {\n      const options = ['attack', 'magic', 'heal'];\n      setAIChoice(options[Math.floor(Math.random() * options.length)]);\n    }\n  }, [turn]);\n\n  return aiChoice;\n};\n","import styles from './styles.module.css';\nimport { useEffect, useState } from 'react';\nimport { useAIOpponent, useBattleSequence } from 'hooks';\nimport { opponentStats, playerStats, wait } from 'shared';\nimport { BattleMenu, PlayerSummary, BattleAnnouncer } from 'components';\n\nexport const Battle = ({ onGameEnd }) => {\n  const [sequence, setSequence] = useState({});\n\n  const {\n    turn,\n    inSequence,\n    playerHealth,\n    opponentHealth,\n    playerAnimation,\n    opponentAnimation,\n    announcerMessage,\n  } = useBattleSequence(sequence);\n\n  const aiChoice = useAIOpponent(turn);\n\n  useEffect(() => {\n    if (aiChoice && turn === 1 && !inSequence) {\n      setSequence({ turn, mode: aiChoice });\n    }\n  }, [turn, aiChoice, inSequence]);\n\n  useEffect(() => {\n    if (playerHealth === 0 || opponentHealth === 0) {\n      (async () => {\n        await wait(1000);\n        onGameEnd(playerHealth === 0 ? opponentStats : playerStats);\n      })();\n    }\n  }, [playerHealth, opponentHealth, onGameEnd]);\n\n  return (\n    <>\n      <div className={styles.opponent}>\n        <div className={styles.summary}>\n          <PlayerSummary\n            main={false}\n            health={opponentHealth}\n            name={opponentStats.name}\n            level={opponentStats.level}\n            maxHealth={opponentStats.maxHealth}\n          />\n        </div>\n      </div>\n\n      <div className={styles.characters}>\n        <div className={styles.gameHeader}>\n          {playerStats.name} vs {opponentStats.name}\n        </div>\n        <div className={styles.gameImages}>\n          <div className={styles.playerSprite}>\n            <img\n              alt={playerStats.name}\n              src={playerStats.img}\n              className={styles[playerAnimation]}\n            />\n          </div>\n          <div className={styles.opponentSprite}>\n            <img\n              alt={opponentStats.name}\n              src={opponentStats.img}\n              className={styles[opponentAnimation]}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.user}>\n        <div className={styles.summary}>\n          <PlayerSummary\n            main={true}\n            health={playerHealth}\n            name={playerStats.name}\n            level={playerStats.level}\n            maxHealth={playerStats.maxHealth}\n          />\n        </div>\n\n        <div className={styles.hud}>\n          <div className={styles.hudChild}>\n            <BattleAnnouncer\n              message={\n                announcerMessage || `Qu'est-ce que le ${playerStats.name} choisit de faire ?`\n              }\n            />\n          </div>\n          {!inSequence && turn === 0 && (\n            <div className={styles.hudChild}>\n              <BattleMenu\n                onHeal={() => setSequence({ mode: 'heal', turn })}\n                onMagic={() => setSequence({ mode: 'magic', turn })}\n                onAttack={() => setSequence({ mode: 'attack', turn })}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  wait,\n  magic,\n  heal,\n  attack,\n  playerStats,\n  opponentStats,\n} from 'shared';\nimport { useEffect, useState } from 'react';\n\nexport const useBattleSequence = sequence => {\n  const [turn, setTurn] = useState(0);\n  const [inSequence, setInSequence] = useState(false);\n\n  const [playerHealth, setPlayerHealth] = useState(playerStats.maxHealth);\n  const [opponentHealth, setOpponentHealth] = useState(\n    opponentStats.maxHealth,\n  );\n\n  const [announcerMessage, setAnnouncerMessage] = useState('');\n\n  const [playerAnimation, setPlayerAnimation] = useState('static');\n  const [opponentAnimation, setOpponentAnimation] = useState('static');\n\n  useEffect(() => {\n    const { mode, turn } = sequence;\n\n    if (mode) {\n      const attacker = turn === 0 ? playerStats : opponentStats;\n      const receiver = turn === 0 ? opponentStats : playerStats;\n\n      switch (mode) {\n        case 'attack': {\n          const damage = attack({ attacker, receiver });\n\n          (async () => {\n            setInSequence(true);\n            setAnnouncerMessage(`${attacker.name} a choisi d'attaquer !`);\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('attack')\n              : setOpponentAnimation('attack');\n            await wait(100);\n\n            turn === 0\n              ? setPlayerAnimation('static')\n              : setOpponentAnimation('static');\n            await wait(500);\n\n            turn === 0\n              ? setOpponentAnimation('damage')\n              : setPlayerAnimation('damage');\n            await wait(750);\n\n            turn === 0\n              ? setOpponentAnimation('static')\n              : setPlayerAnimation('static');\n            setAnnouncerMessage(`${receiver.name} a reçu des dégats !`);\n            turn === 0\n              ? setOpponentHealth(h => (h - damage > 0 ? h - damage : 0))\n              : setPlayerHealth(h => (h - damage > 0 ? h - damage : 0)); // We don't want a negative HP.\n            await wait(2000);\n\n            setAnnouncerMessage(`C'est au tour de ${receiver.name} !`);\n            await wait(1500);\n\n            setTurn(turn === 0 ? 1 : 0);\n            setInSequence(false);\n          })();\n\n          break;\n        }\n\n        case 'magic': {\n          const damage = magic({ attacker, receiver });\n\n          (async () => {\n            setInSequence(true);\n            setAnnouncerMessage(`${attacker.name} a lancé un sort !`);\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('magic')\n              : setOpponentAnimation('magic');\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('static')\n              : setOpponentAnimation('static');\n            await wait(500);\n\n            turn === 0\n              ? setOpponentAnimation('damage')\n              : setPlayerAnimation('damage');\n            await wait(750);\n\n            turn === 0\n              ? setOpponentAnimation('static')\n              : setPlayerAnimation('static');\n            setAnnouncerMessage(\n              `${receiver.name} ne sait pas ce qui l'a frappé !`,\n            );\n            turn === 0\n              ? setOpponentHealth(h => (h - damage > 0 ? h - damage : 0))\n              : setPlayerHealth(h => (h - damage > 0 ? h - damage : 0)); // We don't want a negative HP.\n            await wait(2500);\n\n            setAnnouncerMessage(`C'est au tour de ${receiver.name} !`);\n            await wait(1500);\n\n            setTurn(turn === 0 ? 1 : 0);\n            setInSequence(false);\n          })();\n\n          break;\n        }\n\n        case 'heal': {\n          const recovered = heal({ receiver: attacker });\n\n          (async () => {\n            setInSequence(true);\n            setAnnouncerMessage(`${attacker.name} a choisi de se soigner !`);\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('magic')\n              : setOpponentAnimation('magic');\n            await wait(1000);\n\n            turn === 0\n              ? setPlayerAnimation('static')\n              : setOpponentAnimation('static');\n            await wait(500);\n\n            setAnnouncerMessage(`${attacker.name} a récupéré de la vie.`);\n            turn === 0\n              ? setPlayerHealth(h =>\n                  h + recovered <= attacker.maxHealth\n                    ? h + recovered\n                    : attacker.maxHealth,\n                )\n              : setOpponentHealth(h =>\n                  h + recovered <= attacker.maxHealth\n                    ? h + recovered\n                    : attacker.maxHealth,\n                ); // We don't want to set HP more than the max\n            await wait(2500);\n\n            setAnnouncerMessage(`C'est au tour de ${receiver.name} !`);\n            await wait(1500);\n\n            setTurn(turn === 0 ? 1 : 0);\n            setInSequence(false);\n          })();\n\n          break;\n        }\n\n        default:\n          break;\n      }\n    }\n  }, [sequence]);\n\n  return {\n    turn,\n    inSequence,\n    playerHealth,\n    opponentHealth,\n    playerAnimation,\n    opponentAnimation,\n    announcerMessage,\n  };\n};\n","import styles from './styles.module.css';\n\nexport const EndMenu = ({ winner, onStartClick }) => {\n  return (\n    <div className={styles.main}>\n      <h1>{winner.name} has won!</h1>\n      <button className={styles.startButton} onClick={onStartClick}>\n        Play Again\n      </button>\n    </div>\n  );\n};\n","import styles from './styles.module.css';\nimport React, { useState } from 'react';\n\nexport const StartMenu = ({ onStartClick }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  return (\n    <div className={styles.main}>\n      <input type=\"file\" id=\"actual-btn\" hidden onChange={handleFileChange} />\n      <label htmlFor=\"actual-btn\" className={styles.startButton}>Charger l'image</label>\n      {selectedFile ? (\n        <button className={styles.startButton} onClick={() => onStartClick(selectedFile)}>Démarrer</button>\n      ) : (\n        <button className={styles.startButton} disabled>Démarrer</button>\n      )}\n    </div>\n  );\n};\n","import styles from './styles.module.css';\n\nexport const BattleMenu = ({ onAttack, onMagic, onHeal }) => (\n  <div className={styles.main}>\n    <div onClick={onAttack} className={styles.option}>\n      Attaquer\n    </div>\n    <div onClick={onMagic} className={styles.option}>\n      Utiliser la magie\n    </div>\n    <div onClick={onHeal} className={styles.option}>\n      Se soigner\n    </div>\n  </div>\n);\n","import { Bar } from 'components';\nimport styles from './styles.module.css';\n\nconst red = '#821400';\nconst blue = '#1953cb';\n\nexport const PlayerSummary = ({\n  main,\n  name,\n  level,\n  health,\n  maxHealth,\n}) => (\n  <div\n    className={styles.main}\n    style={{ backgroundColor: main ? red : blue }}\n  >\n    <div className={styles.info}>\n      <div className={styles.name}>{name}</div>\n      <div className={styles.level}>Lvl {level}</div>\n    </div>\n\n    <div className={styles.health}>\n      <Bar label=\"HP\" value={health} maxValue={maxHealth} />\n    </div>\n  </div>\n);\n","import { useTypedMessage } from 'hooks';\nimport styles from './styles.module.css';\n\nexport const BattleAnnouncer = ({ message }) => {\n  const typedMessage = useTypedMessage(message);\n\n  return (\n    <div className={styles.main}>\n      <div className={styles.message}>{typedMessage}</div>\n    </div>\n  );\n};\n","import { wait } from 'shared';\nimport { useEffect, useState } from 'react';\n\nexport const useTypedMessage = message => {\n  const [typedMessage, setTypedMessage] = useState('');\n\n  useEffect(() => {\n    setTypedMessage('');\n\n    if (message.length) {\n      (async () => {\n        let visibleMessage = '';\n        for (let i = 0; i < message.length; i++) {\n          await wait(25);\n\n          visibleMessage = visibleMessage + message[i];\n\n          setTypedMessage(visibleMessage);\n        }\n      })();\n    }\n  }, [message]);\n\n  return typedMessage;\n};\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'components';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}